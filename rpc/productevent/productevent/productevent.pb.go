// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.1
// source: productevent.proto

package productevent

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Product服务
type ProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId   string  `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price       float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	LeftNum     int32   `protobuf:"varint,4,opt,name=leftNum,proto3" json:"leftNum,omitempty"`
	Unit        string  `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`
	Pic         string  `protobuf:"bytes,6,opt,name=pic,proto3" json:"pic,omitempty"`
	Description string  `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	CreateTime  string  `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *ProductInfo) Reset() {
	*x = ProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfo) ProtoMessage() {}

func (x *ProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfo.ProtoReflect.Descriptor instead.
func (*ProductInfo) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{0}
}

func (x *ProductInfo) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductInfo) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductInfo) GetLeftNum() int32 {
	if x != nil {
		return x.LeftNum
	}
	return 0
}

func (x *ProductInfo) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *ProductInfo) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *ProductInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type ProductGeneralReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
}

func (x *ProductGeneralReq) Reset() {
	*x = ProductGeneralReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductGeneralReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductGeneralReq) ProtoMessage() {}

func (x *ProductGeneralReq) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductGeneralReq.ProtoReflect.Descriptor instead.
func (*ProductGeneralReq) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{1}
}

func (x *ProductGeneralReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type GeneralResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *GeneralResp) Reset() {
	*x = GeneralResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralResp) ProtoMessage() {}

func (x *GeneralResp) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralResp.ProtoReflect.Descriptor instead.
func (*GeneralResp) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{2}
}

func (x *GeneralResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GeneralResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type AddProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductInfo *ProductInfo `protobuf:"bytes,1,opt,name=productInfo,proto3" json:"productInfo,omitempty"`
}

func (x *AddProductReq) Reset() {
	*x = AddProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductReq) ProtoMessage() {}

func (x *AddProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductReq.ProtoReflect.Descriptor instead.
func (*AddProductReq) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{3}
}

func (x *AddProductReq) GetProductInfo() *ProductInfo {
	if x != nil {
		return x.ProductInfo
	}
	return nil
}

type GetProductListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start  int32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Amount int32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetProductListReq) Reset() {
	*x = GetProductListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductListReq) ProtoMessage() {}

func (x *GetProductListReq) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductListReq.ProtoReflect.Descriptor instead.
func (*GetProductListReq) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{4}
}

func (x *GetProductListReq) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetProductListReq) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GetProductListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneralResp *GeneralResp   `protobuf:"bytes,1,opt,name=generalResp,proto3" json:"generalResp,omitempty"`
	Total       int32          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	ProductInfo []*ProductInfo `protobuf:"bytes,3,rep,name=productInfo,proto3" json:"productInfo,omitempty"`
}

func (x *GetProductListResp) Reset() {
	*x = GetProductListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductListResp) ProtoMessage() {}

func (x *GetProductListResp) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductListResp.ProtoReflect.Descriptor instead.
func (*GetProductListResp) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{5}
}

func (x *GetProductListResp) GetGeneralResp() *GeneralResp {
	if x != nil {
		return x.GeneralResp
	}
	return nil
}

func (x *GetProductListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetProductListResp) GetProductInfo() []*ProductInfo {
	if x != nil {
		return x.ProductInfo
	}
	return nil
}

type GetProductResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneralResp *GeneralResp `protobuf:"bytes,1,opt,name=generalResp,proto3" json:"generalResp,omitempty"`
	ProductInfo *ProductInfo `protobuf:"bytes,2,opt,name=productInfo,proto3" json:"productInfo,omitempty"`
}

func (x *GetProductResp) Reset() {
	*x = GetProductResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductResp) ProtoMessage() {}

func (x *GetProductResp) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductResp.ProtoReflect.Descriptor instead.
func (*GetProductResp) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{6}
}

func (x *GetProductResp) GetGeneralResp() *GeneralResp {
	if x != nil {
		return x.GeneralResp
	}
	return nil
}

func (x *GetProductResp) GetProductInfo() *ProductInfo {
	if x != nil {
		return x.ProductInfo
	}
	return nil
}

type EditProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductInfo *ProductInfo `protobuf:"bytes,1,opt,name=productInfo,proto3" json:"productInfo,omitempty"`
}

func (x *EditProductReq) Reset() {
	*x = EditProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditProductReq) ProtoMessage() {}

func (x *EditProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditProductReq.ProtoReflect.Descriptor instead.
func (*EditProductReq) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{7}
}

func (x *EditProductReq) GetProductInfo() *ProductInfo {
	if x != nil {
		return x.ProductInfo
	}
	return nil
}

// Event服务
type EventInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EventPrice  float32 `protobuf:"fixed32,3,opt,name=eventPrice,proto3" json:"eventPrice,omitempty"`
	EventNum    int32   `protobuf:"varint,4,opt,name=eventNum,proto3" json:"eventNum,omitempty"`
	StartTime   string  `protobuf:"bytes,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime     string  `protobuf:"bytes,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Description string  `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	ProductId   string  `protobuf:"bytes,8,opt,name=productId,proto3" json:"productId,omitempty"`
}

func (x *EventInfo) Reset() {
	*x = EventInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInfo) ProtoMessage() {}

func (x *EventInfo) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInfo.ProtoReflect.Descriptor instead.
func (*EventInfo) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{8}
}

func (x *EventInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventInfo) GetEventPrice() float32 {
	if x != nil {
		return x.EventPrice
	}
	return 0
}

func (x *EventInfo) GetEventNum() int32 {
	if x != nil {
		return x.EventNum
	}
	return 0
}

func (x *EventInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *EventInfo) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *EventInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EventInfo) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type EventDetailedInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventInfo       *EventInfo `protobuf:"bytes,1,opt,name=eventInfo,proto3" json:"eventInfo,omitempty"`
	EventCreateTime string     `protobuf:"bytes,2,opt,name=eventCreateTime,proto3" json:"eventCreateTime,omitempty"`
	ProductName     string     `protobuf:"bytes,3,opt,name=productName,proto3" json:"productName,omitempty"`
}

func (x *EventDetailedInfo) Reset() {
	*x = EventDetailedInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDetailedInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDetailedInfo) ProtoMessage() {}

func (x *EventDetailedInfo) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDetailedInfo.ProtoReflect.Descriptor instead.
func (*EventDetailedInfo) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{9}
}

func (x *EventDetailedInfo) GetEventInfo() *EventInfo {
	if x != nil {
		return x.EventInfo
	}
	return nil
}

func (x *EventDetailedInfo) GetEventCreateTime() string {
	if x != nil {
		return x.EventCreateTime
	}
	return ""
}

func (x *EventDetailedInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

type FrontEventInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventDetailedInfo *EventDetailedInfo `protobuf:"bytes,1,opt,name=eventDetailedInfo,proto3" json:"eventDetailedInfo,omitempty"`
	ProductInfo       *ProductInfo       `protobuf:"bytes,2,opt,name=productInfo,proto3" json:"productInfo,omitempty"`
}

func (x *FrontEventInfo) Reset() {
	*x = FrontEventInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontEventInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontEventInfo) ProtoMessage() {}

func (x *FrontEventInfo) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontEventInfo.ProtoReflect.Descriptor instead.
func (*FrontEventInfo) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{10}
}

func (x *FrontEventInfo) GetEventDetailedInfo() *EventDetailedInfo {
	if x != nil {
		return x.EventDetailedInfo
	}
	return nil
}

func (x *FrontEventInfo) GetProductInfo() *ProductInfo {
	if x != nil {
		return x.ProductInfo
	}
	return nil
}

type EventGeneralReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId string `protobuf:"bytes,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
}

func (x *EventGeneralReq) Reset() {
	*x = EventGeneralReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventGeneralReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventGeneralReq) ProtoMessage() {}

func (x *EventGeneralReq) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventGeneralReq.ProtoReflect.Descriptor instead.
func (*EventGeneralReq) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{11}
}

func (x *EventGeneralReq) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type AddEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventInfo *EventInfo `protobuf:"bytes,1,opt,name=eventInfo,proto3" json:"eventInfo,omitempty"`
}

func (x *AddEventReq) Reset() {
	*x = AddEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEventReq) ProtoMessage() {}

func (x *AddEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEventReq.ProtoReflect.Descriptor instead.
func (*AddEventReq) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{12}
}

func (x *AddEventReq) GetEventInfo() *EventInfo {
	if x != nil {
		return x.EventInfo
	}
	return nil
}

type GetEventListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start  int32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Amount int32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetEventListReq) Reset() {
	*x = GetEventListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventListReq) ProtoMessage() {}

func (x *GetEventListReq) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventListReq.ProtoReflect.Descriptor instead.
func (*GetEventListReq) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{13}
}

func (x *GetEventListReq) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetEventListReq) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GetEventListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneralResp *GeneralResp         `protobuf:"bytes,1,opt,name=generalResp,proto3" json:"generalResp,omitempty"`
	Total       int32                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	EventList   []*EventDetailedInfo `protobuf:"bytes,3,rep,name=eventList,proto3" json:"eventList,omitempty"`
}

func (x *GetEventListResp) Reset() {
	*x = GetEventListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventListResp) ProtoMessage() {}

func (x *GetEventListResp) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventListResp.ProtoReflect.Descriptor instead.
func (*GetEventListResp) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{14}
}

func (x *GetEventListResp) GetGeneralResp() *GeneralResp {
	if x != nil {
		return x.GeneralResp
	}
	return nil
}

func (x *GetEventListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetEventListResp) GetEventList() []*EventDetailedInfo {
	if x != nil {
		return x.EventList
	}
	return nil
}

type GetEventResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneralResp       *GeneralResp       `protobuf:"bytes,1,opt,name=generalResp,proto3" json:"generalResp,omitempty"`
	EventDetailedInfo *EventDetailedInfo `protobuf:"bytes,2,opt,name=eventDetailedInfo,proto3" json:"eventDetailedInfo,omitempty"`
}

func (x *GetEventResp) Reset() {
	*x = GetEventResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventResp) ProtoMessage() {}

func (x *GetEventResp) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventResp.ProtoReflect.Descriptor instead.
func (*GetEventResp) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{15}
}

func (x *GetEventResp) GetGeneralResp() *GeneralResp {
	if x != nil {
		return x.GeneralResp
	}
	return nil
}

func (x *GetEventResp) GetEventDetailedInfo() *EventDetailedInfo {
	if x != nil {
		return x.EventDetailedInfo
	}
	return nil
}

type EditEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventInfo *EventInfo `protobuf:"bytes,1,opt,name=eventInfo,proto3" json:"eventInfo,omitempty"`
}

func (x *EditEventReq) Reset() {
	*x = EditEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditEventReq) ProtoMessage() {}

func (x *EditEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditEventReq.ProtoReflect.Descriptor instead.
func (*EditEventReq) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{16}
}

func (x *EditEventReq) GetEventInfo() *EventInfo {
	if x != nil {
		return x.EventInfo
	}
	return nil
}

type GetFrontEventListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start  int32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Amount int32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetFrontEventListReq) Reset() {
	*x = GetFrontEventListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFrontEventListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFrontEventListReq) ProtoMessage() {}

func (x *GetFrontEventListReq) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFrontEventListReq.ProtoReflect.Descriptor instead.
func (*GetFrontEventListReq) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{17}
}

func (x *GetFrontEventListReq) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetFrontEventListReq) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GetFrontEventListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneralResp    *GeneralResp      `protobuf:"bytes,1,opt,name=generalResp,proto3" json:"generalResp,omitempty"`
	Total          int32             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	FrontEventList []*FrontEventInfo `protobuf:"bytes,3,rep,name=frontEventList,proto3" json:"frontEventList,omitempty"`
}

func (x *GetFrontEventListResp) Reset() {
	*x = GetFrontEventListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFrontEventListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFrontEventListResp) ProtoMessage() {}

func (x *GetFrontEventListResp) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFrontEventListResp.ProtoReflect.Descriptor instead.
func (*GetFrontEventListResp) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{18}
}

func (x *GetFrontEventListResp) GetGeneralResp() *GeneralResp {
	if x != nil {
		return x.GeneralResp
	}
	return nil
}

func (x *GetFrontEventListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetFrontEventListResp) GetFrontEventList() []*FrontEventInfo {
	if x != nil {
		return x.FrontEventList
	}
	return nil
}

type GetFrontEventResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneralResp    *GeneralResp    `protobuf:"bytes,1,opt,name=generalResp,proto3" json:"generalResp,omitempty"`
	FrontEventInfo *FrontEventInfo `protobuf:"bytes,2,opt,name=frontEventInfo,proto3" json:"frontEventInfo,omitempty"`
}

func (x *GetFrontEventResp) Reset() {
	*x = GetFrontEventResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productevent_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFrontEventResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFrontEventResp) ProtoMessage() {}

func (x *GetFrontEventResp) ProtoReflect() protoreflect.Message {
	mi := &file_productevent_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFrontEventResp.ProtoReflect.Descriptor instead.
func (*GetFrontEventResp) Descriptor() ([]byte, []int) {
	return file_productevent_proto_rawDescGZIP(), []int{19}
}

func (x *GetFrontEventResp) GetGeneralResp() *GeneralResp {
	if x != nil {
		return x.GeneralResp
	}
	return nil
}

func (x *GetFrontEventResp) GetFrontEventInfo() *FrontEventInfo {
	if x != nil {
		return x.FrontEventInfo
	}
	return nil
}

var File_productevent_proto protoreflect.FileDescriptor

var file_productevent_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65,
	0x66, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x65, 0x66,
	0x74, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x11,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x33, 0x0a, 0x0b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x4c, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x41, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0b,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0b, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x3b, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8a, 0x01, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3b, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4d, 0x0a, 0x0e, 0x45, 0x64, 0x69,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xe3, 0x01, 0x0a, 0x09, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x96,
	0x01, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x0e, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x11, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2b, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x35, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3f, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3b, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4d, 0x0a, 0x11, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x45,
	0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x35,
	0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x44, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x96,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x44, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xea, 0x03, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x41, 0x64,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4b, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0b,
	0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x32, 0xa2, 0x04, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a,
	0x09, 0x45, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x47, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_productevent_proto_rawDescOnce sync.Once
	file_productevent_proto_rawDescData = file_productevent_proto_rawDesc
)

func file_productevent_proto_rawDescGZIP() []byte {
	file_productevent_proto_rawDescOnce.Do(func() {
		file_productevent_proto_rawDescData = protoimpl.X.CompressGZIP(file_productevent_proto_rawDescData)
	})
	return file_productevent_proto_rawDescData
}

var file_productevent_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_productevent_proto_goTypes = []interface{}{
	(*ProductInfo)(nil),           // 0: productevent.ProductInfo
	(*ProductGeneralReq)(nil),     // 1: productevent.ProductGeneralReq
	(*GeneralResp)(nil),           // 2: productevent.GeneralResp
	(*AddProductReq)(nil),         // 3: productevent.AddProductReq
	(*GetProductListReq)(nil),     // 4: productevent.GetProductListReq
	(*GetProductListResp)(nil),    // 5: productevent.GetProductListResp
	(*GetProductResp)(nil),        // 6: productevent.GetProductResp
	(*EditProductReq)(nil),        // 7: productevent.EditProductReq
	(*EventInfo)(nil),             // 8: productevent.EventInfo
	(*EventDetailedInfo)(nil),     // 9: productevent.EventDetailedInfo
	(*FrontEventInfo)(nil),        // 10: productevent.FrontEventInfo
	(*EventGeneralReq)(nil),       // 11: productevent.EventGeneralReq
	(*AddEventReq)(nil),           // 12: productevent.AddEventReq
	(*GetEventListReq)(nil),       // 13: productevent.GetEventListReq
	(*GetEventListResp)(nil),      // 14: productevent.GetEventListResp
	(*GetEventResp)(nil),          // 15: productevent.GetEventResp
	(*EditEventReq)(nil),          // 16: productevent.EditEventReq
	(*GetFrontEventListReq)(nil),  // 17: productevent.GetFrontEventListReq
	(*GetFrontEventListResp)(nil), // 18: productevent.GetFrontEventListResp
	(*GetFrontEventResp)(nil),     // 19: productevent.GetFrontEventResp
}
var file_productevent_proto_depIdxs = []int32{
	0,  // 0: productevent.AddProductReq.productInfo:type_name -> productevent.ProductInfo
	2,  // 1: productevent.GetProductListResp.generalResp:type_name -> productevent.GeneralResp
	0,  // 2: productevent.GetProductListResp.productInfo:type_name -> productevent.ProductInfo
	2,  // 3: productevent.GetProductResp.generalResp:type_name -> productevent.GeneralResp
	0,  // 4: productevent.GetProductResp.productInfo:type_name -> productevent.ProductInfo
	0,  // 5: productevent.EditProductReq.productInfo:type_name -> productevent.ProductInfo
	8,  // 6: productevent.EventDetailedInfo.eventInfo:type_name -> productevent.EventInfo
	9,  // 7: productevent.FrontEventInfo.eventDetailedInfo:type_name -> productevent.EventDetailedInfo
	0,  // 8: productevent.FrontEventInfo.productInfo:type_name -> productevent.ProductInfo
	8,  // 9: productevent.AddEventReq.eventInfo:type_name -> productevent.EventInfo
	2,  // 10: productevent.GetEventListResp.generalResp:type_name -> productevent.GeneralResp
	9,  // 11: productevent.GetEventListResp.eventList:type_name -> productevent.EventDetailedInfo
	2,  // 12: productevent.GetEventResp.generalResp:type_name -> productevent.GeneralResp
	9,  // 13: productevent.GetEventResp.eventDetailedInfo:type_name -> productevent.EventDetailedInfo
	8,  // 14: productevent.EditEventReq.eventInfo:type_name -> productevent.EventInfo
	2,  // 15: productevent.GetFrontEventListResp.generalResp:type_name -> productevent.GeneralResp
	10, // 16: productevent.GetFrontEventListResp.frontEventList:type_name -> productevent.FrontEventInfo
	2,  // 17: productevent.GetFrontEventResp.generalResp:type_name -> productevent.GeneralResp
	10, // 18: productevent.GetFrontEventResp.frontEventInfo:type_name -> productevent.FrontEventInfo
	3,  // 19: productevent.ProductService.AddProduct:input_type -> productevent.AddProductReq
	1,  // 20: productevent.ProductService.DeleteProduct:input_type -> productevent.ProductGeneralReq
	4,  // 21: productevent.ProductService.GetProductList:input_type -> productevent.GetProductListReq
	1,  // 22: productevent.ProductService.GetProduct:input_type -> productevent.ProductGeneralReq
	1,  // 23: productevent.ProductService.GetSelectedProductList:input_type -> productevent.ProductGeneralReq
	7,  // 24: productevent.ProductService.EditProduct:input_type -> productevent.EditProductReq
	12, // 25: productevent.EventService.AddEvent:input_type -> productevent.AddEventReq
	13, // 26: productevent.EventService.GetEventList:input_type -> productevent.GetEventListReq
	11, // 27: productevent.EventService.GetEvent:input_type -> productevent.EventGeneralReq
	16, // 28: productevent.EventService.EditEvent:input_type -> productevent.EditEventReq
	11, // 29: productevent.EventService.DeleteEvent:input_type -> productevent.EventGeneralReq
	17, // 30: productevent.EventService.GetFrontEventList:input_type -> productevent.GetFrontEventListReq
	11, // 31: productevent.EventService.GetFrontEvent:input_type -> productevent.EventGeneralReq
	2,  // 32: productevent.ProductService.AddProduct:output_type -> productevent.GeneralResp
	2,  // 33: productevent.ProductService.DeleteProduct:output_type -> productevent.GeneralResp
	5,  // 34: productevent.ProductService.GetProductList:output_type -> productevent.GetProductListResp
	6,  // 35: productevent.ProductService.GetProduct:output_type -> productevent.GetProductResp
	5,  // 36: productevent.ProductService.GetSelectedProductList:output_type -> productevent.GetProductListResp
	2,  // 37: productevent.ProductService.EditProduct:output_type -> productevent.GeneralResp
	2,  // 38: productevent.EventService.AddEvent:output_type -> productevent.GeneralResp
	14, // 39: productevent.EventService.GetEventList:output_type -> productevent.GetEventListResp
	15, // 40: productevent.EventService.GetEvent:output_type -> productevent.GetEventResp
	2,  // 41: productevent.EventService.EditEvent:output_type -> productevent.GeneralResp
	2,  // 42: productevent.EventService.DeleteEvent:output_type -> productevent.GeneralResp
	18, // 43: productevent.EventService.GetFrontEventList:output_type -> productevent.GetFrontEventListResp
	19, // 44: productevent.EventService.GetFrontEvent:output_type -> productevent.GetFrontEventResp
	32, // [32:45] is the sub-list for method output_type
	19, // [19:32] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_productevent_proto_init() }
func file_productevent_proto_init() {
	if File_productevent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_productevent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductGeneralReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDetailedInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontEventInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventGeneralReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFrontEventListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFrontEventListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productevent_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFrontEventResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_productevent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_productevent_proto_goTypes,
		DependencyIndexes: file_productevent_proto_depIdxs,
		MessageInfos:      file_productevent_proto_msgTypes,
	}.Build()
	File_productevent_proto = out.File
	file_productevent_proto_rawDesc = nil
	file_productevent_proto_goTypes = nil
	file_productevent_proto_depIdxs = nil
}
