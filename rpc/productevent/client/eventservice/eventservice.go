// Code generated by goctl. DO NOT EDIT.
// Source: productevent.proto

package eventservice

import (
	"context"

	"pan-blitz-buy/rpc/productevent/productevent"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddEventReq           = productevent.AddEventReq
	AddProductReq         = productevent.AddProductReq
	EditEventReq          = productevent.EditEventReq
	EditProductReq        = productevent.EditProductReq
	EventDetailedInfo     = productevent.EventDetailedInfo
	EventGeneralReq       = productevent.EventGeneralReq
	EventInfo             = productevent.EventInfo
	FrontEventInfo        = productevent.FrontEventInfo
	GeneralResp           = productevent.GeneralResp
	GetEventListReq       = productevent.GetEventListReq
	GetEventListResp      = productevent.GetEventListResp
	GetEventResp          = productevent.GetEventResp
	GetFrontEventListReq  = productevent.GetFrontEventListReq
	GetFrontEventListResp = productevent.GetFrontEventListResp
	GetFrontEventResp     = productevent.GetFrontEventResp
	GetProductListReq     = productevent.GetProductListReq
	GetProductListResp    = productevent.GetProductListResp
	GetProductResp        = productevent.GetProductResp
	ProductGeneralReq     = productevent.ProductGeneralReq
	ProductInfo           = productevent.ProductInfo

	EventService interface {
		AddEvent(ctx context.Context, in *AddEventReq, opts ...grpc.CallOption) (*GeneralResp, error)
		GetEventList(ctx context.Context, in *GetEventListReq, opts ...grpc.CallOption) (*GetEventListResp, error)
		GetEvent(ctx context.Context, in *EventGeneralReq, opts ...grpc.CallOption) (*GetEventResp, error)
		EditEvent(ctx context.Context, in *EditEventReq, opts ...grpc.CallOption) (*GeneralResp, error)
		DeleteEvent(ctx context.Context, in *EventGeneralReq, opts ...grpc.CallOption) (*GeneralResp, error)
		GetFrontEventList(ctx context.Context, in *GetFrontEventListReq, opts ...grpc.CallOption) (*GetFrontEventListResp, error)
		GetFrontEvent(ctx context.Context, in *EventGeneralReq, opts ...grpc.CallOption) (*GetFrontEventResp, error)
	}

	defaultEventService struct {
		cli zrpc.Client
	}
)

func NewEventService(cli zrpc.Client) EventService {
	return &defaultEventService{
		cli: cli,
	}
}

func (m *defaultEventService) AddEvent(ctx context.Context, in *AddEventReq, opts ...grpc.CallOption) (*GeneralResp, error) {
	client := productevent.NewEventServiceClient(m.cli.Conn())
	return client.AddEvent(ctx, in, opts...)
}

func (m *defaultEventService) GetEventList(ctx context.Context, in *GetEventListReq, opts ...grpc.CallOption) (*GetEventListResp, error) {
	client := productevent.NewEventServiceClient(m.cli.Conn())
	return client.GetEventList(ctx, in, opts...)
}

func (m *defaultEventService) GetEvent(ctx context.Context, in *EventGeneralReq, opts ...grpc.CallOption) (*GetEventResp, error) {
	client := productevent.NewEventServiceClient(m.cli.Conn())
	return client.GetEvent(ctx, in, opts...)
}

func (m *defaultEventService) EditEvent(ctx context.Context, in *EditEventReq, opts ...grpc.CallOption) (*GeneralResp, error) {
	client := productevent.NewEventServiceClient(m.cli.Conn())
	return client.EditEvent(ctx, in, opts...)
}

func (m *defaultEventService) DeleteEvent(ctx context.Context, in *EventGeneralReq, opts ...grpc.CallOption) (*GeneralResp, error) {
	client := productevent.NewEventServiceClient(m.cli.Conn())
	return client.DeleteEvent(ctx, in, opts...)
}

func (m *defaultEventService) GetFrontEventList(ctx context.Context, in *GetFrontEventListReq, opts ...grpc.CallOption) (*GetFrontEventListResp, error) {
	client := productevent.NewEventServiceClient(m.cli.Conn())
	return client.GetFrontEventList(ctx, in, opts...)
}

func (m *defaultEventService) GetFrontEvent(ctx context.Context, in *EventGeneralReq, opts ...grpc.CallOption) (*GetFrontEventResp, error) {
	client := productevent.NewEventServiceClient(m.cli.Conn())
	return client.GetFrontEvent(ctx, in, opts...)
}
