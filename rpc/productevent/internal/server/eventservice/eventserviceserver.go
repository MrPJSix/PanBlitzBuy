// Code generated by goctl. DO NOT EDIT.
// Source: productevent.proto

package server

import (
	"context"

	"pan-blitz-buy/rpc/productevent/internal/logic/eventservice"
	"pan-blitz-buy/rpc/productevent/internal/svc"
	"pan-blitz-buy/rpc/productevent/productevent"
)

type EventServiceServer struct {
	svcCtx *svc.ServiceContext
	productevent.UnimplementedEventServiceServer
}

func NewEventServiceServer(svcCtx *svc.ServiceContext) *EventServiceServer {
	return &EventServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *EventServiceServer) AddEvent(ctx context.Context, in *productevent.AddEventReq) (*productevent.GeneralResp, error) {
	l := eventservicelogic.NewAddEventLogic(ctx, s.svcCtx)
	return l.AddEvent(in)
}

func (s *EventServiceServer) GetEventList(ctx context.Context, in *productevent.GetEventListReq) (*productevent.GetEventListResp, error) {
	l := eventservicelogic.NewGetEventListLogic(ctx, s.svcCtx)
	return l.GetEventList(in)
}

func (s *EventServiceServer) GetEvent(ctx context.Context, in *productevent.EventGeneralReq) (*productevent.GetEventResp, error) {
	l := eventservicelogic.NewGetEventLogic(ctx, s.svcCtx)
	return l.GetEvent(in)
}

func (s *EventServiceServer) EditEvent(ctx context.Context, in *productevent.EditEventReq) (*productevent.GeneralResp, error) {
	l := eventservicelogic.NewEditEventLogic(ctx, s.svcCtx)
	return l.EditEvent(in)
}

func (s *EventServiceServer) DeleteEvent(ctx context.Context, in *productevent.EventGeneralReq) (*productevent.GeneralResp, error) {
	l := eventservicelogic.NewDeleteEventLogic(ctx, s.svcCtx)
	return l.DeleteEvent(in)
}

func (s *EventServiceServer) GetFrontEventList(ctx context.Context, in *productevent.GetFrontEventListReq) (*productevent.GetFrontEventListResp, error) {
	l := eventservicelogic.NewGetFrontEventListLogic(ctx, s.svcCtx)
	return l.GetFrontEventList(in)
}

func (s *EventServiceServer) GetFrontEvent(ctx context.Context, in *productevent.EventGeneralReq) (*productevent.GetFrontEventResp, error) {
	l := eventservicelogic.NewGetFrontEventLogic(ctx, s.svcCtx)
	return l.GetFrontEvent(in)
}
