// Code generated by goctl. DO NOT EDIT.
// Source: productevent.proto

package server

import (
	"context"

	"pan-blitz-buy/rpc/productevent/internal/logic/productservice"
	"pan-blitz-buy/rpc/productevent/internal/svc"
	"pan-blitz-buy/rpc/productevent/productevent"
)

type ProductServiceServer struct {
	svcCtx *svc.ServiceContext
	productevent.UnimplementedProductServiceServer
}

func NewProductServiceServer(svcCtx *svc.ServiceContext) *ProductServiceServer {
	return &ProductServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *ProductServiceServer) AddProduct(ctx context.Context, in *productevent.AddProductReq) (*productevent.GeneralResp, error) {
	l := productservicelogic.NewAddProductLogic(ctx, s.svcCtx)
	return l.AddProduct(in)
}

func (s *ProductServiceServer) DeleteProduct(ctx context.Context, in *productevent.ProductGeneralReq) (*productevent.GeneralResp, error) {
	l := productservicelogic.NewDeleteProductLogic(ctx, s.svcCtx)
	return l.DeleteProduct(in)
}

func (s *ProductServiceServer) GetProductList(ctx context.Context, in *productevent.GetProductListReq) (*productevent.GetProductListResp, error) {
	l := productservicelogic.NewGetProductListLogic(ctx, s.svcCtx)
	return l.GetProductList(in)
}

func (s *ProductServiceServer) GetProduct(ctx context.Context, in *productevent.ProductGeneralReq) (*productevent.GetProductResp, error) {
	l := productservicelogic.NewGetProductLogic(ctx, s.svcCtx)
	return l.GetProduct(in)
}

func (s *ProductServiceServer) GetSelectedProductList(ctx context.Context, in *productevent.ProductGeneralReq) (*productevent.GetProductListResp, error) {
	l := productservicelogic.NewGetSelectedProductListLogic(ctx, s.svcCtx)
	return l.GetSelectedProductList(in)
}

func (s *ProductServiceServer) EditProduct(ctx context.Context, in *productevent.EditProductReq) (*productevent.GeneralResp, error) {
	l := productservicelogic.NewEditProductLogic(ctx, s.svcCtx)
	return l.EditProduct(in)
}
