// Code generated by goctl. DO NOT EDIT.
// Source: flashsale.proto

package flashsaleservice

import (
	"context"

	"pan-blitz-buy/rpc/flashsale/flashsale"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FlashsaleReq = flashsale.FlashsaleReq
	GeneralReq   = flashsale.GeneralReq
	GeneralResp  = flashsale.GeneralResp

	FlashsaleService interface {
		FrontFlashsale(ctx context.Context, in *FlashsaleReq, opts ...grpc.CallOption) (*GeneralResp, error)
	}

	defaultFlashsaleService struct {
		cli zrpc.Client
	}
)

func NewFlashsaleService(cli zrpc.Client) FlashsaleService {
	return &defaultFlashsaleService{
		cli: cli,
	}
}

func (m *defaultFlashsaleService) FrontFlashsale(ctx context.Context, in *FlashsaleReq, opts ...grpc.CallOption) (*GeneralResp, error) {
	client := flashsale.NewFlashsaleServiceClient(m.cli.Conn())
	return client.FrontFlashsale(ctx, in, opts...)
}
