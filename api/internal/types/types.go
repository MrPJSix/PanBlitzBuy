// Code generated by goctl. DO NOT EDIT.
package types

type UserEmailSendReq struct {
	Email string `form:"email"`
}

type UserEmailSendResp struct {
	Base
}

type UserRegisterReq struct {
	Email      string `form:"email"`
	Captche    string `form:"captche"`
	Password   string `form:"password"`
	Repassword string `form:"repassword"`
}

type UserRegisterResp struct {
	Base
}

type UserLoginReq struct {
	Email    string `form:"email"`
	Password string `form:"password"`
}

type UserLoginResp struct {
	Base
	Token    string `json:"token"`
	Nickname string `json:"nickname"`
}

type Base struct {
	Code int    `json:"code"`
	Msg  string `json:"msg"`
}

type UserInfo struct {
	Email      string `json:"email"`
	Desc       string `json:"desc"`
	Status     string `json:"status"`
	CreateTime string `json:"create_time"`
}

type AdminLoginReq struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type AdminLoginResp struct {
	Base
	AdminToken string `json:"admin_token"`
	Username   string `json:"username"`
}

type AdminUsersGetReq struct {
	Pagenum  int `form:"pagenum"`
	Pagesize int `form:"pagesize"`
}

type AdminUsersGetResp struct {
	Base
	Pagenum  int        `json:"pagenum"`
	Pagesize int        `json:"pagesize"`
	Total    int        `json:"total"`
	Users    []UserInfo `json:"users"`
}

type ProductReqInfo struct {
	Name  string  `form:"name"`
	Price float32 `form:"price"`
	Num   int     `form:"num"`
	Unit  string  `form:"unit"`
	Desc  string  `form:"desc"`
	Pic   string  `form:"pic"`
}

type ProductRespInfo struct {
	ID         uint    `json:"id"`
	Name       string  `json:"name"`
	Price      float32 `json:"price"`
	Num        int     `json:"num"`
	Unit       string  `json:"unit"`
	Desc       string  `json:"desc"`
	Pic        string  `json:"pic"`
	CreateTime string  `json:"create_time"`
}

type ProductListGetReq struct {
	Pagenum  int `form:"pagenum"`
	Pagesize int `form:"pagesize"`
}

type ProductListGetResp struct {
	Base
	Pagenum  int               `json:"pagenum"`
	Pagesize int               `json:"pagesize"`
	Total    int               `json:"total"`
	Products []ProductRespInfo `json:"products"`
}

type ProductInfoAddReq struct {
	ProductReqInfo
}

type ProductInfoAddResp struct {
	Base
}

type ProductInfoGetReq struct {
	ID uint `form:"id"`
}

type ProductInfoGetResp struct {
	ProductRespInfo
}

type ProductInfoUpdateReq struct {
	ID uint `form:"id"`
	ProductReqInfo
}

type ProductInfoUpdateResp struct {
	Base
}

type ProductInfoDeleteReq struct {
	ID uint `form:"id"`
}

type ProductInfoDeleteResp struct {
	Base
}

type FlashSaleOrderingReq struct {
	ID uint `form:"id"`
}

type FlashSaleOrderingResp struct {
	Base
}

type FlashSaleResultResp struct {
	Base
}

type EventProductRespInfo struct {
	ID          uint   `json:"id"`
	ProductName string `json:"product_name"`
}

type EventRespInfo struct {
	ID          uint    `json:"id"`
	Name        string  `json:"name"`
	ProductName string  `json:"product_name"`
	Price       float32 `json:"price"`
	Num         int     `json:"num"`
	StartTime   int64   `json:"start_time"`
	EndTime     int64   `json:"end_time"`
	CreatTime   string  `json:"creat_time"`
	ProductID   uint    `json:"product_id"`
}

type FrontEventRespInfo struct {
	ID           string  `json:"id"`
	Num          int     `json:"num"`
	EventPrice   float32 `json:"event_price"`
	StartTime    int64   `json:"start_time"`
	EndTime      int64   `json:"end_time"`
	ProductID    string  `json:"product_id"`
	ProductName  string  `json:"product_name"`
	Pic          string  `json:"pic"`
	PorductPrice float32 `json:"product_price"`
	Desc         string  `json:"desc"`
	Unit         string  `json:"unit"`
}

type EventProductsResp struct {
	Base
	Products []EventProductRespInfo `json:"products"`
}

type EventListGetReq struct {
	Pagenum  int `form:"pagenum"`
	Pagesize int `form:"pagesize"`
}

type EventListGetResp struct {
	Base
	Pagenum  int             `json:"pagenum"`
	Pagesize int             `json:"pagesize"`
	Total    int             `json:"total"`
	Events   []EventRespInfo `json:"events"`
}

type EventInfoGetReq struct {
	ID uint `form:"id"`
}

type EventInfoGetResp struct {
	Base
	Event      EventRespInfo          `json:"event"`
	ProductsNo []EventProductRespInfo `json:"products_no"`
}

type EventInfoAddReq struct {
	Name      string  `form:"name"`
	Price     float32 `form:"price"`
	Num       int     `form:"num"`
	StartTime int64   `form:"start_time"`
	EndTime   int64   `form:"end_time"`
	ProductID uint    `form:"product_id"`
}

type EventInfoAddResp struct {
	Base
}

type EventInfoUpdateReq struct {
	ID        uint    `form:"id"`
	Name      string  `form:"name"`
	Price     float32 `form:"price"`
	Num       int     `form:"num"`
	StartTime int64   `form:"start_time"`
	EndTime   int64   `form:"end_time"`
	ProductID uint    `form:"product_id"`
}

type EventInfoUpdateResp struct {
	Base
}

type EventInfoDeleteReq struct {
	ID uint `form:"id"`
}

type EventInfoDeleteResp struct {
	Base
}

type FrontEventListGetReq struct {
	Pagenum  int `form:"pagenum"`
	Pagesize int `form:"pagesize"`
}

type FrontEventListGetResp struct {
	Base
	Pagenum  int                  `json:"pagenum"`
	Pagesize int                  `json:"pagesize"`
	Total    int                  `json:"total"`
	Events   []FrontEventRespInfo `json:"events"`
}

type FrontEventInfoGetReq struct {
	ID uint `form:"id"`
}

type FrontEventInfoGetResp struct {
	Base
	Event FrontEventRespInfo `json:"event"`
}
